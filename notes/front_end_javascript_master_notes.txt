*************************************************************************
  front_end_javascript_master_notes
*************************************************************************
*objects and methods ( this )



*************************************************************************
*objects and methods ( this )

  methods   => functions with a receiver
  functions => no reciever
  
  what is the difference between function invocation and method invocation?

  object methods are just properties that have a value set to a function

  every function is called with a context


  *************************************************************************
  this

    'this' is automatically available to methods 
    'this' is a reverence to the object itself
    'this' allows you to access and modify the properties of the object

    var car = {
      running: false,

      start: function() {
        this.running = true;
      },

      stop: function() {
        this.running = false;
      }
    }

    car.start();
    console.log(car);  // Object {running: true}

    car.stop();
    console.log(car);  // Object {running: false}


    running, start, stop all have the context of the global window object (car)
      and can access that global window object with 'this'
      if the global window object name (car) changes, 
        the methods will retain access to the changed name through 'this'


    *************************************************************************
    difference between function and method invocations
    
      car.start(), car.stop() are method invocations
        car is the receiver

      car.start;                     // method invocation
      var startingCar = car.start;   // var to point at the method invocation
      startingCar()                  // funciton invocation




